---
# Set timezone
- name: Set timezone to AUS Eastern Standard Time (AEST)
  win_timezone:
    timezone: AUS Eastern Standard Time

# # Format disks
# - name: Format F:\ - Windows Server 2012
#   script: scripts/Format-Volume_WS2012R2.ps1 >
#     -DiskNumber 2
#     -DriveLetter F
#     -FileSystemLabel Data
#   when: ansible_distribution == "Microsoft Windows Server 2016 Datacenter"

# - name: Format F:\ - Windows Server 2008
#   script: scripts/Format-Volume_WS2008R2.ps1
#   when: ansible_distribution == "Microsoft Windows Server 2008 R2 Datacenter "

# Disable Windows Firewall
- name: Disable Windows firewall
  win_firewall:
    state: disabled
    profiles:
    - Domain
    - Private
    - Public

# Disable Internet Explorer ESC
- name: Disable IE Enhanced Security Configuration
  script: scripts/Disable-InternetExplorerESC.ps1

# Install .NET Framework 3.5
- name: Install NET-Framework
  win_feature:
    name: NET-Framework-Features
    include_sub_features: true
    state: present
  register: dotnet_install

- name: Reboot if required for .NET Framework install
  win_reboot:
  when: dotnet_install.reboot_required

# Install Microsoft ODBC Driver 11 for SQL Server
- name: Install ODBC driver
  win_package: 
    path: https://download.microsoft.com/download/5/7/2/57249A3A-19D6-4901-ACCE-80924ABEB267/ENU/x64/msodbcsql.msi
    product_id: '{4294D9EB-FECF-4E55-8615-1B9EF152EE95}'
    state: present
# when: host is not a db server

# Join computer to AGL on-premises Active Directory
- name: Join to Active Directory domain
  win_domain_membership:
    dns_domain_name: "{{ dns_domain_name }}"
    domain_admin_user: "{{ dns_domain_name }}\\{{ domain_join_username }}"
    domain_admin_password: "{{ domain_join_password }}"
    domain_ou_path: "{{ domain_ou_path }}"
    state: domain
  register: domain_state

- name: Reboot if AD join requires
  win_reboot:
  when: domain_state.reboot_required

# Add group to local admins
- name: Add group to local admins
  win_group_membership:
    name: Administrators
    members:
      - "{{ dns_domain_name }}\\{{ domain_admin_group }}"
    state: present

# Clean up 
- name: Remove working directories
  win_file:
    path: "{{ item }}"
    state: absent
  with_items:
      - C:\install
      - C:\scripts
  when: ansible_distribution == "Microsoft Windows Server 2008 R2 Datacenter "