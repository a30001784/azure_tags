---

- name: Stripe Data disks
  script: scripts/Storage-Spaces.ps1 >
    -DriveLetter I
    -Interleave 65536
    -FileSystemLabel Data
    -NumDisks {{ num_pooled_disks }}
  when: ansible_distribution != "Microsoft Windows Server 2008 R2 Datacenter " and num_pooled_disks > 0

- name: Format I:\ drive - Windows Server 2008
  script: scripts/Format-Volume_WS2008R2.ps1 -DriveLetter I
  when: ansible_distribution == "Microsoft Windows Server 2008 R2 Datacenter " and num_pooled_disks == 0

- name: Stripe Backup disks
  script: scripts/Storage-Spaces.ps1 >
    -DriveLetter G
    -Interleave 65536
    -FileSystemLabel Backup
  when: ansible_distribution != "Microsoft Windows Server 2008 R2 Datacenter " and has_backup_disk == "true"

- name: Rebbot System
  win_reboot:
    reboot_timeout: 120

- name: sap_copy_sql4sap_files
  script: scripts/sap_copy_sql4sap_files.ps1 >
    -storName "{{ storage_account_name }}"
    -storKey "{{ storage_account_key }}"

- name: sap_sql_copy_blob_files
  script: scripts/sap_sql_copy_blob_files.ps1 >
    -storName "{{ storage_account_name }}"
    -storKey "{{ storage_account_key }}"

# variable for SQL install
- name: set var for sql install
  set_fact:
    sql_install: true

- name: test for SQL Instance
  win_shell: |
    Test-Path "HKLM:\Software\Microsoft\Microsoft SQL Server\Instance Names\SQL"
  register: checksql

- name: set var for sql instal  
  set_fact:
    sql_install: "{{ checksql.stdout | regex_replace('(\\r\\n)','') }}"

- name: check var value for sql install
  debug:
    var: sql_install

# Create directory structure for SQL4SAP Logs
- name: Create directory structure for SQL4SAP Logs
  win_file:
    path: "C:\\Logs"
    state: directory

- name: Run SQL4SQP
  win_shell: | 
    C:\Packages\SAP\SQL4SAP\SQL4SAP.bat -i MSSQLSERVER -u BUILTIN\Administrators /Q /IACCEPTSQLSERVERLICENSETERMS /ACTION=install /SQLSYSADMINACCOUNTS=BUILTIN\Administrators /FEATURES=BC,BOL,Conn,SSMS,ADV_SSMS,SQLEngine,Fulltext,SDK,ADV_SSMS,SNAC_SDK /UpdateEnabled=TRUE /UpdateSource=C:\Packages\SAP\SQL4SAP\x86-x64\Patches\X64
  become: yes
  become_method: runas
  become_user: "{{ ansible_user }}"
  vars:
    ansible_become_password: "{{ ansible_password }}"
  ignore_errors: true
  when: sql_install == false

# Configure MSSQLSERVICE server service
- name: Change user for SQL server service
  win_service:
    name: "{{ item }}"
    start_mode: auto
    username: "NT SERVICE\\{{ item }}"
    force_dependent_services: yes
    state: restarted
  with_items:
    - MSSQLSERVER
    - SQLSERVERAGENT

# Create directory structure for SAP database
- name: Create directory structure for SAP database
  win_file:
    path: "I:\\{{ environment_sid }}\\{{ environment_sid }}{{ item }}"
    state: directory
  with_items:
    - LOG
    - DATA1
    - DATA2
    - DATA3
    - DATA4
    - DATA5
    - DATA6
    - DATA7
    - DATA8

- name: Start service MSSQL Browser
  win_service:
    name: SQLBrowser
    start_mode: auto
    force_dependent_services: yes
    state: restarted


- name: Grant privileges to install user
  win_user_right:
    name: "{{ item }}"
    users:
    - "NT Service\\MSSQLSERVER"
    action: add
  with_items:
    - SeLockMemoryPrivilege
    - SeManageVolumePrivilege

- name: Update registry with Trace Flags
  win_regedit:
    path: "HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL12.MSSQLSERVER\\MSSQLServer\\Parameters"
    name: "{{ item.name }}"
    data: "{{ item.data }}"
    type: string
  with_items:
    - { name: SQLArg3, data: -T617 }
    - { name: SQLArg4, data: -T1117 }
    - { name: SQLArg5, data: -T1118 }
    - { name: SQLArg6, data: -T2371 }
    - { name: SQLArg7, data: -T3051 }
    - { name: SQLArg8, data: -T8075 }
    - { name: SQLArg9, data: -T8080 }

- name: Start service MSSQLSERVICE
  win_service:
    name: MSSQLSERVER
    state: restarted
    force_dependent_services: yes

- name: Start service MSSQLSERVICE, if not started
  win_service:
    name: SQLSERVERAGENT
    state: started
    force_dependent_services: yes

- name: SQL Server Configuration Options
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\SQLPostConfig\sap_post_config_03.sql" -v database="{{ environment_sid }}"


- name: delete any mapped drives under Z
  win_mapped_drive:
    letter: X
    state: absent

# Check for data restore
- set_fact:
    db_restore: false

- name: End Play before data Restore
  meta: end_play
  when: db_restore == false