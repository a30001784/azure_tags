---
- name: Set CRM Source Logical System Name
  win_shell: (Invoke-Sqlcmd -Query "USE {{ crm_sid }} SELECT LOGSYS FROM [{{ crm_sid | lower }}].T000 WHERE MANDT = 100;" -ServerInstance "{{ groups['data-crm'][0] }}").LOGSYS
  register: crm_ls_name_s
  become: yes
  become_method: runas
  become_user: "{{ sap_install_user }}"
  vars:
    ansible_become_password: "{{ sap_install_password }}"

- set_fact:
    crm_source_ls: "{{ crm_ls_name_s.stdout | regex_replace('(\\r\\n)','') }}"

- debug: 
    msg: "{{ crm_source_ls }}"
- debug: 
    msg: "{{ groups['CRM_Database'][0] }}"

- name: ISU Second Set - Script 01
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 01.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_01

- name: ISU Second Set - Script 02
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 02.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_02

- name: ISU Second Set - Script 03
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 03.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_03

- name: ISU Second Set - Script 04
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 04.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}" crm_source_ls="{{ crm_source_ls }}"
  async: 1000000
  poll: 0
  register: Script_04

- name: ISU Second Set - Script 05
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 05.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_05

- name: ISU Second Set - Script 06
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 06.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_06

- name: ISU Second Set - Script 07
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 07.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_07

- name: ISU Second Set - Script 08
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 08.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_08

- name: ISU Second Set - Script 09
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 09.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_09

- name: ISU Second Set - Script 10
  win_shell: sqlcmd.exe -i "C:\Packages\SAP\sqlScripts\BDLS\ISU scripts\Step 2\Second Set\Second set ISU - 10.sql" -v database="{{ isu_sid }}" schema="{{ isu_sid | lower }}"
  async: 1000000
  poll: 0
  register: Script_10

- name: 'Script 01 - check on async task'
  async_status:
    jid: "{{ Script_01.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 02 - check on async task'
  async_status:
    jid: "{{ Script_02.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 03 - check on async task'
  async_status:
    jid: "{{ Script_03.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 04 - check on async task'
  async_status:
    jid: "{{ Script_04.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 05 - check on async task'
  async_status:
    jid: "{{ Script_05.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 06 - check on async task'
  async_status:
    jid: "{{ Script_06.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 07 - check on async task'
  async_status:
    jid: "{{ Script_07.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 08 - check on async task'
  async_status:
    jid: "{{ Script_08.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 09 - check on async task'
  async_status:
    jid: "{{ Script_09.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000

- name: 'Script 10 - check on async task'
  async_status:
    jid: "{{ Script_10.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 30
  retries: 50000