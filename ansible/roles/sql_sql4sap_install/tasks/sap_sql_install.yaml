---
- win_reboot:
    reboot_timeout: 120

- name: sap_copy_sql4sap_files
  script: scripts/sap_copy_sql4sap_files.ps1 >
    -storName "{{ storage_account_name }}"
    -storKey "{{ storage_account_key }}"

- name: Run SQL4SAP
  win_shell: |
    $value = Test-Path “HKLM:\Software\Microsoft\Microsoft SQL Server\Instance Names\SQL”
    if (-Not $value) {
    Start-Process "C:\Packages\SAP\SQL4SAP\SQL4SAP.bat" -Verb runAs -WindowStyle Hidden -ArgumentList " -i MSSQLSERVER -u BUILTIN\Administrators /Q /IACCEPTSQLSERVERLICENSETERMS /ACTION=install /SQLSYSADMINACCOUNTS=BUILTIN\Administrators /FEATURES=BC,BOL,Conn,SSMS,ADV_SSMS,SQLEngine,Fulltext,SDK,ADV_SSMS,SNAC_SDK /UpdateEnabled=TRUE /UpdateSource=C:\Packages\SAP\installFiles\51050563-RDBMS-MSSQLSRV-2014 SP1 CU1-SQL4SAP-only\51050563\x86-x64\Patches\X64"
    }
    Else {
    write-host “Skipping SQL Installation as there is an existing SQL instance”
    }

- name: sleep for 900 seconds and continue with play
  wait_for: timeout=900
  delegate_to: localhost

- name: Stop service MSSQLSERVICE
  win_service:
    name: MSSQLSERVER
    state: Stopped
    force_dependent_services: yes

- name: Set SQL service account credentials
- mssql_db:
    login_user="NT Service\SQLSERVERAGENT"
    login_password=""

- name: Start service MSSQLSERVICE
  win_service:
    name: MSSQLSERVER
    state: Started
    force_dependent_services: yes

# Create directory structure for SAP database
- name: Create directory structure for SAP database
  win_file:
    path: "I:\\{{ environment_sid }}\\{{ environment_sid }}{{ item }}"
    state: directory
  with_items:
    - LOG
    - DATA1
    - DATA2
    - DATA3
    - DATA4
    - DATA5
    - DATA6
    - DATA7
    - DATA8