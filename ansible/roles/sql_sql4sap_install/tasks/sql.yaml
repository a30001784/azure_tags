---
- name: Rebbot System
  win_reboot:
    reboot_timeout: 120

- name: sap_copy_sql4sap_files
  script: scripts/sap_copy_sql4sap_files.ps1 >
    -storName "{{ storage_account_name }}"
    -storKey "{{ storage_account_key }}"

# variable for SQL install
- name: set var for sql install
  set_fact:
    sql_install: true

- name: test for SQL Instance
  win_shell: |
    Test-Path "HKLM:\Software\Microsoft\Microsoft SQL Server\Instance Names\SQL"
  register: checksql

- name: set var for sql instal  
  set_fact:
    sql_install: "{{ checksql.stdout | regex_replace('(\\r\\n)','') }}"

- name: check var value for sql install
  debug:
    var: sql_install

# Create directory structure for SQL4SAP Logs
- name: Create directory structure for SQL4SAP Logs
  win_file:
    path: "C:\\Logs"
    state: directory

# - name: RUN SQL4SAP
#   script: scripts/Install-SQL4SAP.ps1
#   register: sap_sql_install
#   become: yes
#   become_method: runas
#   become_user: "{{ ansible_user }}"
#   vars:
#     ansible_become_password: "{{ ansible_password }}"
#   when: sql_install == false

- name: sap_sql_install
  script: scripts/install_sql_sql4sap_ansible.ps1 >
    -SID "{{ sap_sid }}"
    -storName "{{ storage_account_name }}"
    -storKey "{{ storage_account_key }}"
  register: sap_sql_install
  when: sql_install == false
- debug: var=sap_sql_install.stdout_lines



# - name: RUN SQL4SAP
#   win_shell: |
#     Start-Process  "C:\Packages\SAP\SQL4SAP\SQL4SAP.bat" -Verb runAs -WindowStyle Hidden -ArgumentList " -i MSSQLSERVER -u BUILTIN\Administrators /Q /IACCEPTSQLSERVERLICENSETERMS /ACTION=install /SQLSYSADMINACCOUNTS=BUILTIN\Administrators /FEATURES=BC,BOL,Conn,SSMS,ADV_SSMS,SQLEngine,Fulltext,SDK,ADV_SSMS,SNAC_SDK /UpdateEnabled=TRUE /UpdateSource=C:\Packages\SAP\SQL4SAP\x86-x64\Patches\X64"
#   register: sap_sql_install
#   become: yes
#   become_method: runas
#   become_user: "{{ ansible_user }}"
#   vars:
#     ansible_become_password: "{{ ansible_password }}"
#   when: sql_install == false

- name: sleep for 900 seconds and continue with play
  pause:
    minutes: 15

- name: Stop service MSSQLSERVICE
  win_service:
    name: MSSQLSERVER
    state: Stopped
    force_dependent_services: yes

# Configure SQL server service
- name: Change user for SQL server service
  win_service:
    name: MSSQLSERVER
    username: "NT Service\\MSSQLSERVER"
    password: ""

- name: Change user for SQL server service
  win_service:
    name: SQLSERVERAGENT
    username: "NT Service\\SQLSERVERAGENT"
    password: ""
    
- name: Start service MSSQLSERVICE
  win_service:
    name: SQLSERVERAGENT
    state: Started
    force_dependent_services: yes

# Create directory structure for SAP database
- name: Create directory structure for SAP database
  win_file:
    path: "I:\\{{ environment_sid }}\\{{ environment_sid }}{{ item }}"
    state: directory
  with_items:
    - LOG
    - DATA1
    - DATA2
    - DATA3
    - DATA4
    - DATA5
    - DATA6
    - DATA7
    - DATA8

# Check for data restore
- set_fact:
    db_restore: false

- name: End Play before data Restore
  meta: end_play
  when: db_restore == false